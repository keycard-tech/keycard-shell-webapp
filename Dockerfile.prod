###########
# BUILDER #
###########
# pull official base image
FROM python:3.13.2-alpine as builder

# Build args for UID/GID
ARG UID=1000
ARG GID=1000

# set work directory
WORKDIR /usr/src/keycard_shell
# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apk update && apk add --no-cache ca-certificates tzdata netcat-openbsd autoconf libtool automake make pkgconf
RUN apk add gcc libc-dev libffi-dev postgresql-dev postgresql-libs zlib-dev jpeg-dev musl-dev git

# lint
RUN pip install --upgrade pip
COPY . /usr/src/keycard_shell/

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/keycard_shell/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.13.2-alpine

# Build args for UID/GID
ARG UID=1000
ARG GID=1000

# create directory for the app user
RUN mkdir -p /home/keycard_shell

# create the app user
RUN addgroup -g ${GID} -S keycard_shell && adduser -u ${UID} -S keycard_shell -G keycard_shell

# create the appropriate directories
ENV HOME=/home/keycard_shell
ENV APP_HOME=/home/keycard_shell/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add --no-cache netcat-openbsd
COPY --from=builder /usr/src/keycard_shell/wheels /wheels
COPY --from=builder /usr/src/keycard_shell/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# install node & npm
RUN apk add --update nodejs npm
RUN apk add --no-cache git

# copy project
COPY . $APP_HOME

# fix entrypoint.prod.sh
RUN sed -i 's/\r//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# build JS, CSS
RUN npm install
RUN npm run build
RUN npm cache clean --force

# chown all the files to the app user
RUN chown -R ${UID}:${GID} $APP_HOME
RUN mkdir -p /var/lib/keycard_shell/data
RUN chown -R ${UID}:${GID} /var/lib/keycard_shell/data

# change to the app user
USER keycard_shell

# run entrypoint.prod.sh
ENTRYPOINT ["/home/keycard_shell/web/entrypoint.prod.sh"]